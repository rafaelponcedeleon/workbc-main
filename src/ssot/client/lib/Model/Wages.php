<?php
/**
 * Wages
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  WorkBC\SSoT
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PostgREST API
 *
 * standard public schema
 *
 * The version of the OpenAPI document: 9.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace WorkBC\SSoT\Model;

use \ArrayAccess;
use \WorkBC\SSoT\ObjectSerializer;

/**
 * Wages Class Doc Comment
 *
 * @category Class
 * @package  WorkBC\SSoT
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Wages implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'wages';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'noc' => 'string',
        'occupation_title' => 'string',
        'esdc_wage_rate_low_2021' => 'string',
        'esdc_wage_rate_median_2021' => 'string',
        'esdc_wage_rate_high_2021' => 'string',
        'calculated_median_annual_salary_2021' => 'string',
        'source_information' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'noc' => 'text',
        'occupation_title' => 'text',
        'esdc_wage_rate_low_2021' => 'text',
        'esdc_wage_rate_median_2021' => 'text',
        'esdc_wage_rate_high_2021' => 'text',
        'calculated_median_annual_salary_2021' => 'text',
        'source_information' => 'text'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'noc' => 'noc',
        'occupation_title' => 'occupation_title',
        'esdc_wage_rate_low_2021' => 'esdc_wage_rate_low_2021',
        'esdc_wage_rate_median_2021' => 'esdc_wage_rate_median_2021',
        'esdc_wage_rate_high_2021' => 'esdc_wage_rate_high_2021',
        'calculated_median_annual_salary_2021' => 'calculated_median_annual_salary_2021',
        'source_information' => 'source_information'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'noc' => 'setNoc',
        'occupation_title' => 'setOccupationTitle',
        'esdc_wage_rate_low_2021' => 'setEsdcWageRateLow2021',
        'esdc_wage_rate_median_2021' => 'setEsdcWageRateMedian2021',
        'esdc_wage_rate_high_2021' => 'setEsdcWageRateHigh2021',
        'calculated_median_annual_salary_2021' => 'setCalculatedMedianAnnualSalary2021',
        'source_information' => 'setSourceInformation'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'noc' => 'getNoc',
        'occupation_title' => 'getOccupationTitle',
        'esdc_wage_rate_low_2021' => 'getEsdcWageRateLow2021',
        'esdc_wage_rate_median_2021' => 'getEsdcWageRateMedian2021',
        'esdc_wage_rate_high_2021' => 'getEsdcWageRateHigh2021',
        'calculated_median_annual_salary_2021' => 'getCalculatedMedianAnnualSalary2021',
        'source_information' => 'getSourceInformation'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['noc'] = $data['noc'] ?? null;
        $this->container['occupation_title'] = $data['occupation_title'] ?? null;
        $this->container['esdc_wage_rate_low_2021'] = $data['esdc_wage_rate_low_2021'] ?? null;
        $this->container['esdc_wage_rate_median_2021'] = $data['esdc_wage_rate_median_2021'] ?? null;
        $this->container['esdc_wage_rate_high_2021'] = $data['esdc_wage_rate_high_2021'] ?? null;
        $this->container['calculated_median_annual_salary_2021'] = $data['calculated_median_annual_salary_2021'] ?? null;
        $this->container['source_information'] = $data['source_information'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets noc
     *
     * @return string|null
     */
    public function getNoc()
    {
        return $this->container['noc'];
    }

    /**
     * Sets noc
     *
     * @param string|null $noc NOC
     *
     * @return self
     */
    public function setNoc($noc)
    {
        $this->container['noc'] = $noc;

        return $this;
    }

    /**
     * Gets occupation_title
     *
     * @return string|null
     */
    public function getOccupationTitle()
    {
        return $this->container['occupation_title'];
    }

    /**
     * Sets occupation_title
     *
     * @param string|null $occupation_title Occupation Title
     *
     * @return self
     */
    public function setOccupationTitle($occupation_title)
    {
        $this->container['occupation_title'] = $occupation_title;

        return $this;
    }

    /**
     * Gets esdc_wage_rate_low_2021
     *
     * @return string|null
     */
    public function getEsdcWageRateLow2021()
    {
        return $this->container['esdc_wage_rate_low_2021'];
    }

    /**
     * Sets esdc_wage_rate_low_2021
     *
     * @param string|null $esdc_wage_rate_low_2021 ESDC Wage Rate Low 2021
     *
     * @return self
     */
    public function setEsdcWageRateLow2021($esdc_wage_rate_low_2021)
    {
        $this->container['esdc_wage_rate_low_2021'] = $esdc_wage_rate_low_2021;

        return $this;
    }

    /**
     * Gets esdc_wage_rate_median_2021
     *
     * @return string|null
     */
    public function getEsdcWageRateMedian2021()
    {
        return $this->container['esdc_wage_rate_median_2021'];
    }

    /**
     * Sets esdc_wage_rate_median_2021
     *
     * @param string|null $esdc_wage_rate_median_2021 ESDC Wage Rate Median 2021
     *
     * @return self
     */
    public function setEsdcWageRateMedian2021($esdc_wage_rate_median_2021)
    {
        $this->container['esdc_wage_rate_median_2021'] = $esdc_wage_rate_median_2021;

        return $this;
    }

    /**
     * Gets esdc_wage_rate_high_2021
     *
     * @return string|null
     */
    public function getEsdcWageRateHigh2021()
    {
        return $this->container['esdc_wage_rate_high_2021'];
    }

    /**
     * Sets esdc_wage_rate_high_2021
     *
     * @param string|null $esdc_wage_rate_high_2021 ESDC Wage Rate High 2021
     *
     * @return self
     */
    public function setEsdcWageRateHigh2021($esdc_wage_rate_high_2021)
    {
        $this->container['esdc_wage_rate_high_2021'] = $esdc_wage_rate_high_2021;

        return $this;
    }

    /**
     * Gets calculated_median_annual_salary_2021
     *
     * @return string|null
     */
    public function getCalculatedMedianAnnualSalary2021()
    {
        return $this->container['calculated_median_annual_salary_2021'];
    }

    /**
     * Sets calculated_median_annual_salary_2021
     *
     * @param string|null $calculated_median_annual_salary_2021 Calculated Median Annual Salary  2021
     *
     * @return self
     */
    public function setCalculatedMedianAnnualSalary2021($calculated_median_annual_salary_2021)
    {
        $this->container['calculated_median_annual_salary_2021'] = $calculated_median_annual_salary_2021;

        return $this;
    }

    /**
     * Gets source_information
     *
     * @return string|null
     */
    public function getSourceInformation()
    {
        return $this->container['source_information'];
    }

    /**
     * Sets source_information
     *
     * @param string|null $source_information Source Information
     *
     * @return self
     */
    public function setSourceInformation($source_information)
    {
        $this->container['source_information'] = $source_information;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


